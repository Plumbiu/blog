.md {
  color: var(--text-1);
  margin: 0;
  word-break: break-word;

  &>p {
    line-height: 28px;
  }

  &>* {
    overflow-x: hidden;
  }

  /* table */
  table {
    display: block;
    overflow-x: auto;
    border-spacing: 0;
    table-layout: fixed;
    white-space: nowrap;
    margin: 20px 0;

    thead {
      border-bottom: 1px solid var(--divider);
    }

    tbody {
      font-size: 14px;
    }

    th {
      text-align: left;
      font-weight: 600;
    }

    th,
    td {
      padding: 10px 14px;
      border-bottom: 1px solid var(--divider);

      &:first-child {
        padding-left: 0;
      }

      &:last-child {
        padding-right: 0;
      }
    }

    tr:last-child>td {
      border-bottom: none;
    }
  }

  /* Code */
  code {
    font-size: 14px;
    padding: 2px 6px;
    border-radius: 4px;
    color: var(--text);
    background-color: var(--c-gray-soft);
  }

  pre {
    margin: 0;
    color: var(--text-1);
    overflow: auto;
    tab-size: 2;
    line-height: 1.6;
    max-height: 60vh;
    border-radius: var(--pre-radius);
    background-color: var(--bg-md-pre);
    padding: var(--pre-padding) 0 var(--pre-padding) var(--pre-padding);

    code {
      display: block;
      width: fit-content;
      padding: 0;
      min-width: 100%;
      box-sizing: content-box;
      color: inherit;
      background-color: transparent;
    }
  }

  /* blockquote */
  blockquote {
    position: relative;
    color: var(--text-2);
    font-size: 14px;
    padding: 10px 0;
    padding-left: 16px;
    margin-left: calc(var(--extend-x) / 10);
    margin-right: 0;
    border-left: 4px solid var(--bg-md-quote-before);

    p {
      line-height: 1.6;
      margin: 0;
    }
  }

  blockquote[class] {
    color: var(--text-1);
    border-radius: 2px;
    padding-right: 16px;
    border-left: none;
    margin-left: 0;
  }

  blockquote[data-title] p:first-child {
    font-weight: 700;
    margin-bottom: 4px;
  }

  .blockquote-info {
    background-color: var(--bg-md-quote-info);

    code {
      color: var(--c-purple-1);
      background-color: var(--c-purple-soft);
    }
  }

  .blockquote-warn {
    background-color: var(--bg-md-quote-warn);

    code {
      color: var(--c-yellow-1);
      background-color: var(--c-yellow-soft);
    }
  }

  .blockquote-danger {
    background-color: var(--bg-md-quote-danger);

    code {
      color: var(--c-red-1);
      background-color: var(--c-red-soft);
    }
  }

  /* Image */
  img {
    position: relative;
    max-width: 100%;
    height: auto;
    cursor: pointer;
    object-fit: contain;
    border-radius: 4px;
    transition: border-radius 250ms;

    &:hover {
      border-radius: 0;
    }
  }

  /* Details */
  details {
    font-size: 14px;
    padding: 16px 16px 8px;
    border-radius: 2px;
    background-color: var(--c-gray-soft);
    margin-bottom: 8px;

    summary {
      margin-bottom: 8px;
      font-weight: 600;
      cursor: pointer;
    }

    p {
      margin: 8px 0;
    }
  }

  .line {
    display: inline-block;
    min-height: 18px;
    width: 100%;
  }

  .line[data-line]::before {
    content: attr(data-line);
    display: inline-block;
    color: var(--text-2);
    min-width: 26px;
  }

  .highlight-line,
  .deleted,
  .inserted {
    box-sizing: content-box;
    padding-left: 16px;
    margin-left: -16px;
  }

  .highlight-line,
  .highlight-word {
    background-color: var(--bg-md-highlight-line);
  }

  .highlight-word {
    box-sizing: content-box;
    padding: 0 1px;
    border-radius: 4px;
    border: 1px solid var(--c-green-soft);

    &+.highlight-word {
      border-radius: 0;
      padding: 0;
      border-left: none;
      border-right: none;
    }

    &.highlight-word-start {
      border-right: none;
      border-radius: 4px 0 0 4px;
    }

    &.highlight-word-end {
      border-right: 1px solid var(--c-green-soft);
      border-radius: 0 4px 4px 0;
    }
  }

  .deleted {
    background-color: var(--c-red-soft);

    &::before {
      content: "- ";
      color: var(--c-red-1);
    }
  }

  .inserted {
    background-color: var(--c-green-soft);

    &::before {
      content: "+ ";
      color: var(--c-green-1);
    }
  }

  .language-bash>.line:first-child {
    &::before {
      content: "$ ";
    }
  }
}